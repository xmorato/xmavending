{"version":3,"sources":["config.js","redux/reducers/products/stockReducer.js","redux/reducers/coins/cashUserReducer.js","redux/reducers/display/displayReducer.js","redux/reducers/coins/cashMachineReducer.js","redux/rootReducer.js","redux/actions/products/actionTypes.js","redux/actions/coins/actionTypes.js","redux/actions/display/actionTypes.js","redux/reducers/role/roleReducer.js","redux/actions/role/actionTypes.js","redux/store.js","utils/creditUtils.js","redux/actions/display/displayActions.js","components/coins/CoinPanel.js","redux/actions/coins/cashMachineActions.js","redux/actions/coins/cashUserActions.js","components/products/ProductRowStyle.js","redux/actions/products/stockActions.js","components/products/ProductActionButton.js","components/products/ProductRow.js","components/products/ProductHeaderStyle.js","components/products/ProductHeader.js","components/products/ProductList.js","components/display/DisplayPanel.js","components/RoleSwitch.js","redux/actions/role/roleActions.js","App.js","index.js"],"names":["config","initialState","name","price","stock","rootReducer","combineReducers","products","state","action","type","product","payload","newProduct","cashUser","newCoinStock","display","cashMachine","console","log","providerMode","store","createStore","composeWithDevTools","applyMiddleware","logger","totalCreditAmount","credit","Object","entries","reduce","acum","coin","Number","toFixed","getMachineUpdated","userCash","machineCash","machineUpdated","forEach","element","calcCashToReturn","change","coins","keys","sort","ant","seg","changeToReturn","fill","machineCashUpdated","machineArray","i","length","min","Math","parseInt","getFormatedChange","cashToReturnArray","cashLabels","cashObject","cashLabelsSorted","amount","slice","changeMessageAction","message","CoinPanel","isProvider","useSelector","cash","dispatch","useDispatch","handleCoinClick","e","target","coinId","incrementCoinMachineAction","totalCash","Box","justifyContent","flexDirection","paddingTop","alignItems","width","Typography","style","flex","textAlign","paddingBottom","map","currency","key","onClick","height","fontSize","borderRadius","marginLeft","variant","Button","color","useStyles","makeStyles","TableRow","background","decrementStockAction","productId","ProductActionButton","props","incrementStockAction","disabled","enoughCredit","changeToReturnArray","totalUserCredit","totalCashToReturn","getChangeToReturn","machineUpdatedArray","next","elem","getFinalMachineCash","changeTotReturMessage","ProductRow","classes","className","marginRight","borderBottom","TableHeader","ProductHeader","ProductList","DisplayPanel","marginBottom","marginTop","border","RoleSwitch","FormControlLabel","control","Switch","onChange","modeOn","checked","label","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7c02798.chunk.js","sourcesContent":["export const config =\n{\n    currency: \"€\",\n    currencyList: {\n        \"0.05\": 0,\n        \"0.1\": 0,\n        \"0.2\": 0,\n        \"0.5\": 0,\n        \"1\": 0,\n        \"2\": 0\n    },\n    vendingProdcutStock: {\n        \"p1\": { name: \"Beer 0.0%\", price: 0.80, stock: 10 },\n        \"p2\": { name: \"Coca-Cola\", price: 0.75, stock: 16 },\n        \"p3\": { name: \"Coca-Cola Light\", price: 0.65, stock: 16 },\n        \"p4\": { name: \"Orange Fanta\", price: 0.45, stock: 15 },\n        \"p5\": { name: \"H2O Regular Water\", price: 0.35, stock: 20 },\n        \"p6\": { name: \"Orange Juice\", price: 0.85, stock: 20 },\n        \"p7\": { name: \"Apple Juice XL\", price: 0.95, stock: 20 },\n        \"p8\": { name: \"Gatorade\", price: 1.15, stock: 20 }\n    }\n}","import { INCREMENT_STOCK, DECREMENT_STOCK } from \"../../actions/products/actionTypes\";\nimport { config } from \"../../../config\"\n\nconst initialState = config.vendingProdcutStock;\n\nexport const stockReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT_STOCK:\n      {\n        const product = state[action.payload]\n        const newProduct = {}\n        newProduct[action.payload] = { ...product }\n        newProduct[action.payload].stock = newProduct[action.payload].stock + 1;\n        return ({\n          ...state, ...newProduct\n        })\n      }\n      ;\n\n    case DECREMENT_STOCK:\n      {\n        const product = state[action.payload]\n        const newProduct = {}\n        newProduct[action.payload] = { ...product }\n        newProduct[action.payload].stock = newProduct[action.payload].stock - 1;\n        return ({\n          ...state, ...newProduct\n        })\n      }\n      ;\n\n    default:\n      return state;\n      ;\n  }\n};\n","import { INCREMENT_COIN_USER, REFUND_COINS } from \"../../actions/coins/actionTypes\";\nimport { config } from '../../../config'\n\nconst initialState = config.currencyList;\n\nexport const cashUserReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INCREMENT_COIN_USER:\n            {\n                const newCoinStock = {}\n                newCoinStock[action.payload] = state[action.payload] + 1;\n                return ({\n                    ...state, ...newCoinStock\n                })\n            }\n\n        case REFUND_COINS:\n            return ({ ...initialState })\n        default: return state;\n    }\n};\n","import { CHANGE_MESSAGE, RESET_MESSAGE } from \"../../actions/display/actionTypes\";\n\nconst initialState = \"Welcome to XMA Vending APP, please insert coin and select a product ...\"\n\nexport const displayReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CHANGE_MESSAGE:\n            return (action.payload)\n        case RESET_MESSAGE:\n            return (initialState)\n        default: return state;\n    }\n};\n","import { INCREMENT_COIN_MACHINE, UPDATE_CASH_MACHINE } from \"../../actions/coins/actionTypes\";\nimport { config } from '../../../config'\n\nconst initialState = config.currencyList;\n\nexport const cashMachineReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INCREMENT_COIN_MACHINE:\n            {\n                const newCoinStock = {}\n                newCoinStock[action.payload] = state[action.payload] + 1;\n                return ({\n                    ...state, ...newCoinStock\n                })\n            }\n        case UPDATE_CASH_MACHINE: {\n            console.log(\"payload\", action.payload)\n            return (action.payload)\n        }\n\n        default: return state;\n    }\n};\n","import { combineReducers } from \"redux\";\nimport { stockReducer } from \"./reducers/products/stockReducer\";\nimport { cashUserReducer } from \"./reducers/coins/cashUserReducer\";\nimport { displayReducer } from \"./reducers/display/displayReducer\"\nimport { cashMachineReducer } from \"./reducers/coins/cashMachineReducer\";\nimport { roleReducer } from './reducers/role/roleReducer'\n\n\nexport const rootReducer = combineReducers({\n    products: stockReducer,\n    cashUser: cashUserReducer,\n    display: displayReducer,\n    cashMachine: cashMachineReducer,\n    providerMode: roleReducer\n});\n","export const INCREMENT_STOCK = \"INCREMENT_STOCK\";\nexport const DECREMENT_STOCK = \"DECREMENT_STOCK\"\n","export const INCREMENT_COIN_USER = \"INCREMENT_COIN_USER\";\nexport const REFUND_COINS = \"REFUND_COINS\"\nexport const INCREMENT_COIN_MACHINE = \"INCREMENT_COIN_MACHINE\";\nexport const UPDATE_CASH_MACHINE = 'UPDATE_CASH_MACHINE'\n","export const CHANGE_MESSAGE = \"CHANGE_MESSAGE\";\nexport const RESET_MESSAGE = \"RESET_MESSAGE\";","import { ENABLE_PROVIDER_MODE, DISABLE_PROVIDER_MODE } from \"../../actions/role/actionTypes\";\n\nconst initialState = false;\n\nexport const roleReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ENABLE_PROVIDER_MODE:\n            return (true)\n        case DISABLE_PROVIDER_MODE:\n            return (false)\n        default: return state;\n    }\n};\n","export const ENABLE_PROVIDER_MODE = \"ENABLE_PROVIDER_MODE\";\nexport const DISABLE_PROVIDER_MODE = \"DISABLE_PROVIDER_MODE\";\n","import { createStore, applyMiddleware } from \"redux\";\nimport { rootReducer } from \"./rootReducer\";\nimport { logger } from \"redux-logger\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(logger))\n);\n\nexport default store;\n","import { config } from '../config'\n\n/**\n * Check if credit is enough to buy a product with this price\n * @param {*} price \n * @param {*} credit \n */\n\nexport const enoughCredit = (price, credit) => {\n    const total = totalCreditAmount(credit)\n    return (total >= price);\n}\n\n\n/**\n * Flat diferent coins to total\n * @param {*} credit \n */\nexport const totalCreditAmount = (credit) => {\n    const coinsArray = Object.entries(credit);\n    return coinsArray.reduce((acum, coin) => {\n        return (acum + (Number(coin[0]) * coin[1]))\n    }, 0).toFixed(2)\n\n}\n\n/***\n * @returns null if no change available, \n * [] if we don´t need to return any change, \n * Array with change to return if there is change available to return\n */\n\nexport const getChangeToReturn = (userCash, machineCash, price) => {\n    const totalUserCredit = totalCreditAmount(userCash);\n    const totalCashToReturn = Number((totalUserCredit - price).toFixed(2));\n    if (totalCashToReturn === 0) return [];\n    return calcCashToReturn(userCash, machineCash, totalCashToReturn)\n}\n/***\n * @returns an new cashMachine object with the usercash added \n */\nexport const getMachineUpdated = (userCash, machineCash) => {\n\n    // creating a new object to be returned\n    const machineUpdated = { ...machineCash } //{\"1\":cantidadMachine}\n\n    //traversing userCash \n    Object.entries(userCash)\n        .forEach(element => { // element tendra [\"1\", cantidaUsuarioParaEstaMoneda]\n            machineUpdated[element[0]] = machineUpdated[Number(element[0])] + Number(element[1])\n        });\n\n    return machineUpdated\n}\n\n/**\n * @returns null if there is not enough change to return, \n * or an array with the number of coins to return. This array as positions as different type coins,\n * and IMPORTANT, this array is sorted from higher coin value to lower.\n * example, if we have coins: 2 eur, 1eur and 0.5eru\n * this array returned: [3,0,1] means that we have to return 3 coins of 2 eur, zero of 1 eur and 1 coin of 0.5eur \n */\nexport const calcCashToReturn = (userCash, machineCash, change) => {\n\n    /*We create an array with all the avaiable coins we have\n     and create another one with the same size and filled with zero´s.\n     This latest array will contain the amount of coins to return.\n     IMPORTANT: we need to traverse the machine coins stock and the new array\n     to return in the same order (from high to low value)*/\n\n    const coins = Object.keys(userCash).sort((ant, seg) => Number(seg) - Number(ant))\n    //coins: ['2','1','0.5'......] sorted from higher to lower\n\n    const changeToReturn = [...coins].fill(0);\n    //changeToReturn=[0,0,0....0] new array to return\n\n    // 1- move all user coins to the machine so we can take them in account to return the change\n    const machineCashUpdated = getMachineUpdated(userCash, machineCash)\n    const machineArray = Object.entries(machineCashUpdated)\n        .sort((ant, seg) => Number(seg[0]) - Number(ant[0])) // [[\"2\",0],[\"1\",1]....]\n\n    // 2- Traverse all the coins values from higher value to lower\n    for (let i = 0; i < machineArray.length; i++) {\n        // if change is greather or equal to the coin value\n        if (change >= Number(coins[i])) {\n            //we take the min value between the amount of coins of this type we need for this change\n            //and the amount of coins of this type we have at the machine\n            const min = Math.min(parseInt(change / Number(coins[i])), Number(machineArray[i][1]))\n            if (min > 0) { // if we can use a coin for this change\n                //update change return for this coin type\n                changeToReturn[i] = min\n                // substract to change this value \n                change = Number((change - (changeToReturn[i] * Number(coins[i]))).toFixed(2));\n            }\n        }\n    }\n    return (Number(change) === 0 ? changeToReturn : null)\n}\n\n/***\n * @returns an object with the final cashMachine value after taking the user chash and returning the \n * correct chash to the user with the change to return\n */\nexport const getFinalMachineCash = (userCash, machineCash, changeToReturnArray) => {\n    //first update machine with all user credit\n    const machineUpdated = getMachineUpdated(userCash, machineCash)\n    const machineUpdatedArray = Object.entries(machineUpdated)\n        .sort((ant, next) => (Number(next[0]) - Number(ant[0])))\n    //second substract the change to return\n    for (let i = 0; i < changeToReturnArray.length; i++) {\n        machineUpdatedArray[i][1] = machineUpdatedArray[i][1] - changeToReturnArray[i]\n    }\n    //we return the change in object format so we can update the state in store with that value\n    const ret = machineUpdatedArray\n        .reduce((acum, elem) => {\n            return ({ ...acum, [elem[0]]: elem[1] })\n        }\n            , {})\n    return ret\n}\n\n/**\n * @param cashObject cash object with coins and amounts\n * example: \n *      {\n *      \"0.5\":2,\n *      \"1\": 0,\n *      \"2\":3\n *      }\n * @returns array of sorted coins(another 2 positions array) from higher value to lower value\n * example: [[\"2\",3],[\"1\",0],[\"0.5\",2]....]\n */\nexport const getSortedArray = (cashObject) => {\n    return Object.entries(cashObject)\n        .sort((ant, seg) => Number(seg[0]) - Number(ant[0]))\n}\n/**\n * @param cashToReturnArray array of sorted coins amount to return\n * example [1,0,0...]\n * @param cashLabels cash object to get the label for every coin to display in message\n */\nexport const getFormatedChange = (cashToReturnArray, cashLabels) => {\n    const cashLabelsSorted = getSortedArray(cashLabels)\n    //[[\"2\",3],[\"1\",0],[\"0.5\",2]....]\n\n    return (cashToReturnArray.reduce(\n        (acum, amount, i) => {\n            if (amount > 0) {\n                return acum = acum + `${amount} of ${cashLabelsSorted[i][0]}${config.currency}, `\n            }\n            return acum\n        }\n        , \"\").slice(0, -2)) // removing last \" ,\"\n\n}","import { CHANGE_MESSAGE, RESET_MESSAGE } from \"./actionTypes\";\n\nexport const changeMessageAction = (message) => {\n  return ({\n    type: CHANGE_MESSAGE,\n    payload: message\n  });\n};\nexport const resetMessageAction = () => {\n  return ({\n    type: RESET_MESSAGE,\n  });\n};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Box, Button, Typography } from \"@material-ui/core\"\nimport { incrementCoinUserAction, refundCoinsAction } from '../../redux/actions/coins/cashUserActions'\nimport { incrementCoinMachineAction } from '../../redux/actions/coins/cashMachineActions'\nimport { totalCreditAmount } from '../../utils/creditUtils'\nimport { config } from '../../config'\nimport { resetMessageAction, changeMessageAction } from '../../redux/actions/display/displayActions';\n\nconst CoinPanel = () => {\n\n    const isProvider = useSelector(state => state.providerMode)\n    const cash = useSelector(state => (isProvider ? state.cashMachine : state.cashUser))\n\n    const dispatch = useDispatch()\n\n    const handleCoinClick = (e) => {\n        const coin = e.target.name;\n        dispatch(!isProvider\n            ? incrementCoinUserAction(coin)\n            : incrementCoinMachineAction(coin));\n        dispatch(changeMessageAction(`Coin ${coin} ${config.currency} inserted!`))\n    }\n    const handleRefundClick = () => {\n        dispatch(refundCoinsAction());\n        dispatch(resetMessageAction())\n    }\n\n    const totalCash = totalCreditAmount(cash)\n\n    return (\n        <Box display=\"flex\" justifyContent=\"center\" flexDirection=\"column\" paddingTop=\"15px\" alignItems=\"center\">\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" width=\"100%\">\n                <Typography style={{ flex: \"0 0 40%\", textAlign: \"end\" }}>\n                    Push coins to insert =>\n                </Typography>\n                <Box paddingBottom=\"10px\" flex=\"0 0 60%\">\n                    {Object.entries(config.currencyList)\n                        .sort((ant, seg) => Number(ant[0]) - Number(seg[0]))\n                        .map((currency) => <button key={currency[0]} onClick={handleCoinClick} name={currency[0]}\n                            style={{ width: \"50px\", height: \"50px\", fontSize: \"19px\", borderRadius: \"50px\", marginLeft: \"5px\" }} >{currency[0]}</button>)\n                    }\n                </Box>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" width=\"100%\">\n                <Typography style={{ flex: \"0 0 40%\", textAlign: \"end\" }}>\n                    # Coins inserted =>\n                 </Typography>\n                <Box paddingBottom=\"2px\" display=\"flex\" flex=\"0 0 60%\">\n                    {Object.entries(cash)\n                        .sort((ant, seg) => Number(ant[0]) - Number(seg[0]))\n                        .map((currency) =>\n                            <Typography key={currency[0]}\n\n                                style={{ width: \"50px\", textAlign: \"center\", fontSize: \"19px\", marginLeft: \"5px\" }} >{currency[1]}\n                            </Typography>)\n                    }\n                </Box>\n            </Box>\n            <Typography variant=\"h5\">Total: {totalCash}{config.currency}</Typography>\n            {!isProvider &&\n                Number(totalCash) !== 0 && <Button variant=\"outlined\" style={{ color: 'red' }} onClick={handleRefundClick}>Refund Credit</Button>}\n        </Box >\n    );\n}\n\nexport default CoinPanel;","import { INCREMENT_COIN_MACHINE, UPDATE_CASH_MACHINE } from \"./actionTypes\";\n\nexport const incrementCoinMachineAction = (coinId) => {\n    return ({\n        type: INCREMENT_COIN_MACHINE,\n        payload: coinId\n    });\n};\nexport const updateMachineCashAction = (cashMachine) => {\n    return ({\n        type: UPDATE_CASH_MACHINE,\n        payload: cashMachine\n    });\n}\n\n","import { INCREMENT_COIN_USER, REFUND_COINS } from \"./actionTypes\";\n\nexport const incrementCoinUserAction = (coinId) => {\n    return ({\n        type: INCREMENT_COIN_USER,\n        payload: coinId\n    });\n};\n\nexport const refundCoinsAction = () => {\n    return ({\n        type: REFUND_COINS\n    });\n};\n","import { makeStyles } from '@material-ui/core'\n\nexport const useStyles = makeStyles(() => ({\n\n    TableRow: {\n        '&:nth-child(even)': {\n            background: 'rgb(137,208,205)',\n        },\n        '&:nth-child(odd)': {\n            background: 'rgba(137,208,205,0.4)',\n        },\n        'font-size': '1.4rem',\n        'padding-bottom': '0.2rem',\n        'padding-top': '0.2rem',\n        'padding-left': '1rem',\n        'border-bottom': '1px solid #5cc2e1',\n    }\n}))","import { INCREMENT_STOCK, DECREMENT_STOCK } from \"./actionTypes\";\n\nexport const incrementStockAction = (productId) => {\n  return ({\n    type: INCREMENT_STOCK,\n    payload: productId\n  });\n};\n\nexport const decrementStockAction = (productId) => {\n  return ({\n    type: DECREMENT_STOCK,\n    payload: productId\n  });\n};\n","import { Box, Button, Typography } from \"@material-ui/core\"\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { decrementStockAction, incrementStockAction } from '../../redux/actions/products/stockActions'\nimport { enoughCredit, getChangeToReturn, getFinalMachineCash, getFormatedChange } from '../../utils/creditUtils'\nimport { changeMessageAction } from '../../redux/actions/display/displayActions'\nimport { updateMachineCashAction } from '../../redux/actions/coins/cashMachineActions'\nimport { refundCoinsAction } from \"../../redux/actions/coins/cashUserActions\";\n\n\nexport const ProductActionButton = (props) => {\n    const { productId, isProvider, price, stock } = props;\n    const dispatch = useDispatch();\n    const credit = useSelector(state => state.cashUser)\n    const machineCash = useSelector(state => state.cashMachine)\n    //  Provider onClick events\n    const onAddClick = () => dispatch(incrementStockAction(productId))\n    const onDecrementClick = () => dispatch(decrementStockAction(productId))\n\n    //Custormer onClick event (buyButton only enabled if enough stock)\n    const onBuyClick = () => {\n        // user has enough credit\n        if (enoughCredit(price, credit)) {\n\n            const changeToReturnArray = getChangeToReturn(credit, machineCash, price)\n\n            if (!!changeToReturnArray) { //machine has enough cash to return change\n\n                dispatch(decrementStockAction(productId))\n                dispatch(updateMachineCashAction(getFinalMachineCash(credit, machineCash, changeToReturnArray)))\n                dispatch(refundCoinsAction())\n\n                const changeTotReturMessage =\n                    (changeToReturnArray.length === 0)\n                        ? \"\"\n                        : \"Your change:\" + getFormatedChange(changeToReturnArray, machineCash)\n\n                dispatch(changeMessageAction(\"Thank you! enjoy your drink!! \" + changeTotReturMessage))\n\n            } else dispatch(changeMessageAction(\"Sorry, there is no change for this import...\"))\n\n        } else dispatch(changeMessageAction(\"Sorry, not enough credit for this product...\"))\n\n    }\n\n    return (\n        !isProvider\n            ?\n            <Button variant=\"outlined\" disabled={stock === 0} onClick={onBuyClick}>\n                <Typography style={stock === 0 ? { color: 'red' } : { color: 'black' }}>\n                    {stock === 0 ? 'OUT OF STOCK' : 'Buy'}\n                </Typography>\n            </Button>\n            : <Box>\n                <Button variant=\"outlined\" onClick={onAddClick}>+</Button>\n                <Button variant=\"outlined\" disabled={stock === 0} onClick={onDecrementClick}>-</Button>\n            </Box>\n    )\n}","import { Box, Typography } from \"@material-ui/core\"\nimport React from 'react';\nimport { useStyles } from './ProductRowStyle'\nimport { ProductActionButton } from './ProductActionButton'\nimport { useSelector } from 'react-redux'\n\nexport const ProductRow = (props) => {\n    const providerMode = useSelector(state => state.providerMode);\n    const classes = useStyles();\n    const { product, productId } = props\n    return (\n        <Box className={classes.TableRow} display=\"flex\" marginLeft=\"10%\" marginRight=\"10%\" borderBottom=\"1px solid grey\">\n            <Box flex=\"0 0 30%\" display=\"flex\" justifyContent=\"flex-start\" >\n                <Typography variant=\"body1\">{product.name}</Typography>\n            </Box>\n            <Box flex=\"0 0 20%\" display=\"flex\" justifyContent=\"flex-end\">\n                <Typography variant=\"body1\">{product.price}</Typography>\n            </Box>\n            <Box flex=\"0 0 20%\" display=\"flex\" justifyContent=\"flex-end\">\n                <Typography variant=\"body1\">{product.stock}</Typography>\n            </Box>\n            <Box flex=\"0 0 30%\" display=\"flex\" justifyContent=\"center\">\n                <ProductActionButton isProvider={providerMode} productId={productId} price={product.price} stock={product.stock} />\n            </Box>\n        </Box>)\n}\n","import { makeStyles } from '@material-ui/core'\n\nexport const useStyles = makeStyles(() => ({\n\n    TableHeader: {\n        'border-bottom': '1px solid grey',\n        'border-top': '1px solid grey',\n        'background': 'rgb(92,144,225)',\n        'padding-left': '1rem'\n    }\n}))","import { Box, Typography } from \"@material-ui/core\"\nimport React from 'react';\nimport { useStyles } from './ProductHeaderStyle'\nimport { config } from '../../config'\n\n\nexport const ProductHeader = (props) => {\n    const classes = useStyles();\n    return (\n        <Box className={classes.TableHeader} display=\"flex\" marginLeft=\"10%\" marginRight=\"10%\" borderBottom=\"1px solid grey\">\n            <Box flex=\"0 0 30%\" display=\"flex\" justifyContent=\"flex-start\" >\n                <Typography variant=\"h6\">PRODUCT</Typography>\n            </Box>\n            <Box flex=\"0 0 20%\" display=\"flex\" justifyContent=\"flex-end\">\n                <Typography variant=\"h6\">{`PRICE IN ${config.currency}`}</Typography>\n            </Box>\n            <Box flex=\"0 0 20%\" display=\"flex\" justifyContent=\"flex-end\">\n                <Typography variant=\"h6\">STOCK</Typography>\n            </Box>\n            <Box flex=\"0 0 30%\" display=\"flex\" justifyContent=\"center\">\n                <Typography variant=\"h6\">ACTION</Typography>\n            </Box>\n        </Box>)\n}","import { useSelector } from 'react-redux'\nimport { Box } from \"@material-ui/core\"\nimport React from 'react';\nimport { ProductRow } from './ProductRow'\nimport { ProductHeader } from './ProductHeader'\n\nconst ProductList = () => {\n\n    const products = useSelector(state => state.products)\n\n    return (\n        <>\n            <ProductHeader />\n            <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n                {Object.entries(products).map((product) =>\n                    <ProductRow product={product[1]} productId={product[0]} key={product[0]} />)\n                }\n            </Box>\n\n        </>\n    )\n}\n\nexport default ProductList;","import { Box, Typography } from \"@material-ui/core\"\nimport React from 'react';\nimport { useSelector } from \"react-redux\"\n\nexport const DisplayPanel = () => {\n\n    const message = useSelector((state) => state.display)\n    return (\n        <Box display=\"flex\" marginBottom=\"5px\" marginTop=\"5px\" height=\"60px\" justifyContent=\"center\" alignItems=\"center\" marginLeft=\"10%\" marginRight=\"10%\" border=\"1px solid grey\">\n            <Typography variant=\"h5\">\n                {message}\n            </Typography>\n        </Box>)\n}\n","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport { Box } from \"@material-ui/core\"\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { enableProviderMode, disableProviderMode } from \"../redux/actions/role/roleActions\"\nimport { useSelector, useDispatch } from 'react-redux'\nimport { changeMessageAction } from \"../redux/actions/display/displayActions\"\n\nexport const RoleSwitch = () => {\n\n    const providerMode = useSelector(state => state.providerMode);\n    const dispatch = useDispatch();\n\n    const handleChange = (e) => {\n        const modeOn = e.target.checked\n        modeOn ? dispatch(enableProviderMode()) : dispatch(disableProviderMode())\n        dispatch(changeMessageAction(\"Provider Mode \" + (modeOn ? \"ON\" : \"OFF\")))\n    }\n\n    return (\n        <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" marginBottom=\"5px\">\n            <FormControlLabel\n                control={<Switch onChange={handleChange} checked={providerMode} name=\"Role\" color=\"primary\" />}\n                label=\"Enable Provider Mode\"\n            />\n        </Box>\n    )\n}\n","import { ENABLE_PROVIDER_MODE, DISABLE_PROVIDER_MODE } from \"./actionTypes\";\n\nexport const enableProviderMode = () => {\n  return ({\n    type: ENABLE_PROVIDER_MODE\n  });\n};\nexport const disableProviderMode = () => {\n  return ({\n    type: DISABLE_PROVIDER_MODE\n  });\n};","import React from \"react\";\n//import \"./App.css\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport CoinPanel from \"./components/coins/CoinPanel\";\nimport ProductList from \"./components/products/ProductList\";\nimport { DisplayPanel } from \"./components/display/DisplayPanel\"\nimport { RoleSwitch } from \"./components/RoleSwitch\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <DisplayPanel />\n        <RoleSwitch />\n        <ProductList />\n        <CoinPanel />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}